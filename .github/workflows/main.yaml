name: Quiz Apps

on:
  push:
  pull_request:
  workflow_call:
    inputs:
      analyze_directories:
        required: false
        type: string
        default: "lib test"
      concurrency:
        required: false
        type: number
        default: 4
      coverage_excludes:
        required: false
        type: string
        default: ""
      flutter_channel:
        required: false
        type: string
        default: "stable"
      flutter_version:
        required: false
        type: string
        default: "3.13.8"
      format_directories:
        required: false
        type: string
        default: "lib test"
      format_line_length:
        required: false
        type: number
        default: 80
      min_coverage:
        required: false
        type: number
        default: 0
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      test_optimization:
        required: false
        type: boolean
        default: true
      test_recursion:
        required: false
        type: boolean
        default: false
      package_get_excludes:
        required: false
        type: string
        default: "!*"


jobs:
  semantic-pull-request:
    uses: VeryGoodOpenSource/very_good_workflows/.github/workflows/semantic_pull_request.yml@v1

  build-fg:
    name: Build Four Gospels
    defaults:
      run:
        working-directory: apps/four_gospels

    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{inputs.flutter_version}}
          channel: ${{inputs.flutter_channel}}
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: Bootstrap melos
        uses: bluefireteam/melos-action@v3

      - name: 📦 Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good packages get --recursive --ignore=${{inputs.package_get_excludes}}

      - name: ✨ Check Formatting
        run: dart format --line-length 80 --set-exit-if-changed "lib test"

      - name: 🕵️ Analyze
        run: flutter analyze ${{inputs.analyze_directories}}

      - name: 🧪 Run Tests
        run: very_good test -j ${{inputs.concurrency}} ${{(inputs.test_recursion && '--recursive') || ''}} ${{(inputs.test_optimization && '--optimization') || '--no-optimization'}} --coverage --test-randomize-ordering-seed random

      - name: 📊 Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: apps/four_gospels/coverage/lcov.info
          exclude: ${{inputs.coverage_excludes}}
          min_coverage: 0

  build-core:
    name: Build Quiz Core
    defaults:
      run:
        working-directory: packages/quiz_core

    runs-on: ubuntu-latest

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.13.8
          channel: stable
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: Bootstrap melos
        uses: bluefireteam/melos-action@v3

      - name: 📦 Install Dependencies
        run: |
          flutter pub global activate very_good_cli
          very_good packages get --recursive --ignore=${{inputs.package_get_excludes}}

      - name: ✨ Check Formatting
        run: dart format --line-length 80 --set-exit-if-changed "lib test"

      - name: 🕵️ Analyze
        run: flutter analyze ${{inputs.analyze_directories}}

      - name: 🧪 Run Tests
        run: very_good test -j ${{inputs.concurrency}} ${{(inputs.test_recursion && '--recursive') || ''}} ${{(inputs.test_optimization && '--optimization') || '--no-optimization'}} --coverage --test-randomize-ordering-seed random

      - name: 📊 Check Code Coverage
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: packages/quiz_core/coverage/lcov.info
          exclude: ${{inputs.coverage_excludes}}
          min_coverage: 0
